[✅] Done
[⏳] Uncompleted
[🐞] BugFix
[📌] Untracked


# API:
[📌]
[📌]
[📌]
[📌]
[📌]
[📌]

# Authentication.
[📌] Expose user´s data using an endpoint to let the client to connect (React).
[📌] Expose an endpoint to check if an user exists on the database(use query parameters for url).
[📌] Include a thread to fetch users data to set it available on cache memory with Redis for better performance once the Authentication module starts. Neccesary to the process of checking if the user exists on database.
[⏳] Include an endpoint with two methods (POST, GET) for user´s authentication process (Register, Login).
[📌] Include and endpoint that destroys the current session JWT and logout the user retrieving a 200 status code to the client.
[📌]
[📌]

# Application: 
[📌] User can store .csv, .txt, .pdf files on database.
[📌] Design, build and migrate Files model (file_name, file_extension, file_size, file_author(FK)).
[📌] Design and create the formulary for files storing.
[📌] Integrate the view that saves user's uploaded files on database.
[📌] User can upload the created(by DataForge tools) files on the database.
[📌] User can load the created file directly.
[📌] In a shared space, the user can share and vizualize files info from another team members.
[📌] Files can be stored in cache during 2 hours if they are not saved. 
[📌] Files can be shared throught email to the destination adress, or to user themself.
[📌] User can Design spaces to work coolaboratevily.
[⏳] User can store files in the app database to be used latter.
[📌] The number of files's total size must be controlled per account depending of tier the user have (free, professional)
[📌] Expose an endpoint to manage the selected language change and update it in user's data.
[📌]
[📌]